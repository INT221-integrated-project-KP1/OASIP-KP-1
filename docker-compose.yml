version: '3.4'

services:

  proxy:
    container_name: proxy
    image: nginx:stable-alpine
    restart: always
    depends_on:
      - front
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
      - "~/certificateFiles/www-001.crt:/ssl/www-001.crt"
      - "~/certificateFiles/privatekey.key:/ssl/privatekey.key"

  db:
    container_name: db
    image: mysql:8.0
    env_file: .env
    volumes:
      - ~/datadir:/var/lib/mysql
      - ./db/script:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQLDB_ROOT_PASSWORD
    restart: on-failure

  back:
    container_name: back
    image: ghcr.io/int221-integrated-project-kp1/back-end:latest
    env_file: .env
    restart: on-failure
    depends_on:
      - db
    volumes:
      - "~/files:/files"
    environment:
      SPRING_APPLICATION_JSON: '{
              "spring.datasource.url"  : "jdbc:mysql://db:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?allowPublicKeyRetrieval=true&useSSL=false",
              "spring.datasource.username" : "$MYSQLDB_USER",
              "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
              "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
              "spring.jpa.hibernate.ddl-auto" : "update"
        }'

  front:
    container_name: front
    image: ghcr.io/int221-integrated-project-kp1/front-end:latest
    env_file: .env
    depends_on:
      - back
    volumes:
      - "./nginx-front.conf:/etc/nginx/conf.d/default.conf:ro"
